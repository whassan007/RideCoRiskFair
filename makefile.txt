.PHONY: install test lint build clean docker-build docker-run

# Install the package in development mode
install:
	pip install -e .

# Run tests
test:
	pytest

# Run linting
lint:
	black .
	isort .

# Build the package
build:
	python -m build

# Clean build artifacts
clean:
	rm -rf build/ dist/ *.egg-info/
	find . -type d -name __pycache__ -exec rm -rf {} +
	find . -name "*.pyc" -delete

# Build Docker image
docker-build:
	docker build -t rideco-risk-analysis .

# Run analysis in Docker container
docker-run:
	docker run -v $(PWD)/output:/app/output rideco-risk-analysis

# Run with custom config
docker-run-config:
	docker run -v $(PWD)/output:/app/output -v $(PWD)/config:/app/config rideco-risk-analysis --config /app/config/example_config.json
